{"version":3,"sources":["webpack:///./Model.js","webpack:///./utils/animations.js","webpack:///./components/Button.js","webpack:///./utils/http.js","webpack:///./components/Paginate.js","webpack:///./ClinicalTrials.js","webpack:///./components/Hamburger.js","webpack:///./components/ProgressBar.js","webpack:///./components/SearchBar.js","webpack:///./Layout.js","webpack:///./utils/helpers.js","webpack:///./components/DropDown.js","webpack:///./components/Header.js","webpack:///./components/Footer.js","webpack:///./components/Body.js","webpack:///./components/Modal.js","webpack:///./index.js"],"names":["onProgress","e","lengthComputable","model","state","loadingProgress","max","total","value","loaded","m","redraw","onLoad","onLoadStart","isLoading","onLoadEnd","_task","url","args","Task","rej","res","request","_objectSpread","xhrProgress","then","config","xhr","onprogress","onload","onloadstart","onloadend","http","getTask","params","method","postTask","putTask","routes","limits","data","Stream","paginate","from","size","route","scrollPos","limit","profile","showLimits","showSettings","showNavigation","showModal","query","toggleLimits","mdl","toggleSettings","toggleModal","filterData","animateChildrenLimitsEntrance","idx","_ref4","dom","style","opacity","setTimeout","classList","toggle","animate","dir","_ref5","IsLoading","Button","view","_ref","_ref$attrs","attrs","action","label","_ref$attrs$classList","isDisabled","concat","onclick","disabled","Paginate","paginateFn","length","searchData","ps","compose","map","q","str","replace","RegExp","markBy","filter","test","props","byTerms","Trial","showDescription","_ref$attrs$trial","trial","official_title","start_date","detail_description","trust","ClinicalTrials","_ref2","onError","error","onSuccess","_ref3","trials","originalData","fetchData","over","trialLens","getTrialData","fork","ClinicalTrials_objectSpread","undefined","pickAll","oninit","onbeforeupdate","_ref6","_ref6$attrs$mdl","_ref6$attrs$mdl$state","key","oncreate","animateComponentEntrance","Hamburger","render","xmlns","d","onupdate","fill","ProgressBar","_ref$attrs$mdl$state$","SearchBar","placeholder","oninput","debounce300","target","Layout","children","id","Header","Modal","Body","Footer","wait","now","lensProp","Selector","onbeforeremove","_ref7","Promise","_toConsumableArray","reverse","child","display","DropDown","fn","timeout","context","this","arguments","callNow","clearTimeout","apply","console","log","remove","add","root","document","body","getProfile","w","winW","window","innerWidth","checkWidth","lastProfile","requestAnimationFrame","mount"],"mappings":"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","file":"main-chunk.js","sourcesContent":["import m from 'mithril'\r\nimport Stream from 'mithril-stream'\r\nimport Task from 'data.task'\r\nconst routes = [\r\n  '/home',\r\n  '/clinical-trials',\r\n  '/interventions',\r\n  '/diseases',\r\n  '/terms',\r\n]\r\n\r\nfunction onProgress(e) {\r\n  if (e.lengthComputable) {\r\n    model.state.loadingProgress.max = e.total\r\n    model.state.loadingProgress.value = e.loaded\r\n    m.redraw()\r\n  }\r\n}\r\n\r\nfunction onLoad() {\r\n  return false\r\n}\r\n\r\nfunction onLoadStart() {\r\n  model.state.isLoading(true)\r\n  return false\r\n}\r\nfunction onLoadEnd() {\r\n  model.state.isLoading(false)\r\n  model.state.loadingProgress.max = 0\r\n  model.state.loadingProgress.value = 0\r\n  return false\r\n}\r\n\r\nconst xhrProgress = {\r\n  config: (xhr) => {\r\n    xhr.onprogress = onProgress\r\n    xhr.onload = onLoad\r\n    xhr.onloadstart = onLoadStart\r\n    xhr.onloadend = onLoadEnd\r\n  },\r\n}\r\n\r\nconst _task = (url) => (args) =>\r\n  new Task((rej, res) =>\r\n    m.request(url, { ...args, ...xhrProgress }).then(res, rej)\r\n  )\r\n\r\nconst getTask = (url) => (args) => {\r\n  return _task(url)({\r\n    params: { ...args },\r\n    method: 'GET',\r\n  })\r\n}\r\n\r\nconst postTask = (url) => (args) => _task(url)({ ...args, method: 'POST' })\r\nconst putTask = (url) => (args) => _task(url)({ ...args, method: 'PUT' })\r\n\r\nconst http = {\r\n  getTask,\r\n  postTask,\r\n  putTask,\r\n}\r\n\r\nexport default http\r\n\r\nexport const model = {\r\n  routes,\r\n  http,\r\n  limits: [5, 10, 15, 20, 25, 30, 35, 40, 45, 50],\r\n  data: Stream({}),\r\n  state: {\r\n    loadingProgress: {\r\n      max: 0,\r\n      value: 0,\r\n    },\r\n    paginate: { from: 1, size: 10, total: 0 },\r\n    isLoading: Stream(false),\r\n    url: '',\r\n    route: '',\r\n    scrollPos: 1,\r\n    limit: 10,\r\n    profile: '',\r\n    showLimits: Stream(false),\r\n    showSettings: Stream(false),\r\n    showNavigation: Stream(false),\r\n    showModal: Stream(false),\r\n    query: Stream(''),\r\n  },\r\n  toggleLimits: (mdl) => mdl.state.showLimits(!mdl.state.showLimits()),\r\n  toggleSettings: (mdl) => mdl.state.showSettings(!mdl.state.showSettings()),\r\n  toggleModal: (mdl) => mdl.state.showModal(!mdl.state.showModal()),\r\n  filterData: (mdl) => (query) => mdl.state.query(query),\r\n}\r\n","import m from 'mithril'\r\n\r\nexport const IsLoading = m('.holder', [\r\n  m('.preloader', [\r\n    m('div'),\r\n    m('div'),\r\n    m('div'),\r\n    m('div'),\r\n    m('div'),\r\n    m('div'),\r\n    m('div'),\r\n  ]),\r\n])\r\n\r\nexport const animateComponentEntrance = (idx) => ({ dom }) => {\r\n  dom.style.opacity = 0\r\n  return setTimeout(() => {\r\n    dom.classList.toggle('stretchRight')\r\n    dom.style.opacity = 1\r\n  }, idx * 100 + 20)\r\n}\r\n\r\nexport const animateSidebarEntrance = ({ dom }) => {\r\n  dom.style.opacity = 0\r\n  dom.classList.toggle('slideRight')\r\n  dom.style.opacity = 1\r\n}\r\n\r\nexport const animateChildrenEntrance = ({ dom }) => {\r\n  let children = [...dom.children]\r\n\r\n  return children.map((child, idx) => {\r\n    child.style.opacity = 0\r\n    setTimeout(() => {\r\n      child.classList.toggle('slideRight')\r\n      child.style.opacity = 1\r\n    }, (idx + 1) * 10)\r\n  })\r\n}\r\n\r\nexport const animateChildrenLimitsEntrance = (idx) => ({ dom }) => {\r\n  dom.style.opacity = 0\r\n  setTimeout(() => {\r\n    dom.classList.toggle('slideDown')\r\n    dom.style.opacity = 1\r\n  }, (idx + 1) * 200)\r\n}\r\n\r\nexport const animate = (dir) => ({ dom }) => {\r\n  dom.style.opacity = 0\r\n  setTimeout(() => {\r\n    dom.classList.toggle(dir)\r\n    dom.style.opacity = 1\r\n  }, 200)\r\n}\r\n\r\nexport const slideModalOut = ({ dom }) => {\r\n  return new Promise(() => {\r\n    dom.classList.remove('slideRight')\r\n    return setTimeout(() => {\r\n      dom.classList.add('reverseAnimation', 'slideRight')\r\n    }, 200)\r\n  })\r\n}\r\n\r\nexport const animateChildrenLimitsExit = ({ dom }) =>\r\n  new Promise(() => {\r\n    [...dom.children].reverse().map((child, idx) => {\r\n      return setTimeout(() => {\r\n        child.style.display = 'none'\r\n      }, idx * 100)\r\n    })\r\n  })\r\n","import m from 'mithril'\r\n\r\nconst Button = () => {\r\n  return {\r\n    view: ({ attrs: { action, label, classList = '', isDisabled } }) =>\r\n      m(\r\n        `button.btn.${classList}`,\r\n        { onclick: (e) => action(e), disabled: isDisabled },\r\n        label\r\n      ),\r\n  }\r\n}\r\n\r\nexport default Button\r\n","import m from 'mithril'\r\nimport Task from 'data.task'\r\nimport model from '../Model.js'\r\n\r\nconst _http = (mdl) => {\r\n  mdl.isLoading(!mdl.isLoading)\r\n  return m.request\r\n}\r\n\r\nconst _task = (url) => (args) =>\r\n  new Task((rej, res) => _http(model)(url, args).then(res, rej))\r\n\r\nconst getTask = (url) => (args) => _task(url)({ ...args, method: 'GET' })\r\nconst postTask = (url) => (args) => _task(url)({ ...args, method: 'POST' })\r\nconst putTask = (url) => (args) => _task(url)({ ...args, method: 'PUT' })\r\n\r\nconst http = {\r\n  getTask,\r\n  postTask,\r\n  putTask,\r\n}\r\n\r\nexport default http\r\n","import m from 'mithril'\r\nimport Button from '../components/Button.js'\r\n\r\nconst Paginate = {\r\n  view: ({ attrs: { state, http, paginateFn, limit, mdl } }) =>\r\n    m('.pagination.row', [\r\n      m(Button, {\r\n        action: () => {\r\n          state.from = state.from - mdl.state.limit\r\n          state.size = mdl.state.limit\r\n          paginateFn(http)\r\n        },\r\n        isDisabled: state.from - mdl.state.limit <= 0,\r\n        label: `Load Prev ${limit}`,\r\n      }),\r\n      m('code.code', `${state.from} / ${state.from + state.size} `),\r\n      m(Button, {\r\n        action: () => {\r\n          state.from = state.from + state.data.length++\r\n          state.size = mdl.state.limit\r\n          paginateFn(http)\r\n        },\r\n        label: `Load Next ${limit} of ${state.total}`,\r\n        isDisabled: state.from + mdl.state.limit > state.total,\r\n      }),\r\n    ]),\r\n}\r\n\r\nexport default Paginate\r\n","import m from 'mithril'\r\nimport { IsLoading, animateComponentEntrance } from './utils'\r\nimport {\r\n  replace,\r\n  map,\r\n  pickAll,\r\n  lensProp,\r\n  over,\r\n  compose,\r\n  test,\r\n  props,\r\n  filter,\r\n} from 'ramda'\r\nimport Paginate from './components/Paginate.js'\r\n\r\nconst trialLens = lensProp('trials')\r\n\r\nconst byTerms = (ps) => (query) =>\r\n  compose(\r\n    test(new RegExp(query, 'i')),\r\n    props(ps)\r\n  )\r\n\r\nconst markBy = (q) => (str) =>\r\n  q ? replace(new RegExp(q, 'gi'), `<mark>${q}</mark>`, str) : str\r\n\r\nconst searchData = (ps) => (query) =>\r\n  compose(\r\n    map(map(markBy(query))),\r\n    filter(byTerms(ps)(query))\r\n  )\r\n\r\nconst Trial = () => {\r\n  let showDescription = false\r\n  return {\r\n    view: ({\r\n      attrs: {\r\n        trial: { official_title, start_date, detail_description },\r\n      },\r\n    }) =>\r\n      m(\r\n        '.grid-item.row',\r\n        { onclick: () => (showDescription = !showDescription) },\r\n        [\r\n          m('h1.left', m.trust(official_title)),\r\n          m('p.right', 'Start Date: ', m('pre', start_date)),\r\n          showDescription &&\r\n            m('.row', m('pre.pre', m.trust(detail_description))),\r\n        ]\r\n      ),\r\n  }\r\n}\r\n\r\nconst ClinicalTrials = ({ attrs: { mdl } }) => {\r\n  const state = {\r\n    error: {},\r\n    data: undefined,\r\n    ...mdl.state.paginate,\r\n    props: ['official_title', 'detail_description'],\r\n  }\r\n  const onError = (error) => (state.error = error)\r\n  const onSuccess = ({ trials, total }) => {\r\n    state.originalData = trials\r\n    state.data = trials\r\n    state.total = total\r\n  }\r\n\r\n  const getTrialData = pickAll([\r\n    'official_title',\r\n    'detail_description',\r\n    'start_date',\r\n    'nci_id',\r\n  ])\r\n\r\n  const fetchData = (http) =>\r\n    http\r\n      .getTask('https://clinicaltrialsapi.cancer.gov/v1/clinical-trials')({\r\n        from: state.from,\r\n        size: state.size,\r\n      })\r\n      .map(over(trialLens, map(getTrialData)))\r\n      .fork(onError, onSuccess)\r\n\r\n  return {\r\n    oninit: ({\r\n      attrs: {\r\n        mdl: { http },\r\n      },\r\n    }) => fetchData(http),\r\n\r\n    onbeforeupdate: ({\r\n      attrs: {\r\n        mdl: {\r\n          state: { query },\r\n        },\r\n      },\r\n    }) =>\r\n      state.data\r\n        ? (state.data = searchData(state.props)(query())(state.originalData))\r\n        : true,\r\n    view: ({\r\n      attrs: {\r\n        mdl: {\r\n          http,\r\n          state: { isLoading, limit },\r\n        },\r\n      },\r\n    }) =>\r\n      m('section.clinical-trials', [\r\n        m(Paginate, {\r\n          state,\r\n          http,\r\n          paginateFn: fetchData,\r\n          limit,\r\n          mdl,\r\n        }),\r\n        state.data &&\r\n          !isLoading() &&\r\n          m('.trials', [\r\n            state.data.map((trial, key) =>\r\n              m(Trial, {\r\n                oncreate: animateComponentEntrance(key),\r\n                key,\r\n                trial,\r\n              })\r\n            ),\r\n          ]),\r\n        isLoading() && IsLoading,\r\n      ]),\r\n  }\r\n}\r\n\r\nexport default ClinicalTrials\r\n","import m from 'mithril'\r\n\r\nconst Hamburger = ({ attrs: { mdl } }) => {\r\n  const state = {\r\n    close:\r\n      'M10 8.586L2.929 1.515 1.515 2.929 8.586 10l-7.071 7.071 1.414 1.414L10 11.414l7.071 7.071 1.414-1.414L11.414 10l7.071-7.071-1.414-1.414L10 8.586z',\r\n    open: 'M0 3h20v2H0V3zm0 6h20v2H0V9zm0 6h20v2H0v-2z',\r\n  }\r\n\r\n  const render = (dom) => {\r\n    return m.render(\r\n      dom,\r\n      m('path', {\r\n        xmlns: 'http://www.w3.org/2000/svg',\r\n        d: mdl.state.showModal() ? state.close : state.open,\r\n      })\r\n    )\r\n  }\r\n\r\n  return {\r\n    oncreate: ({ dom }) => {\r\n      let _dom = dom\r\n      return render(_dom)\r\n    },\r\n    onupdate: ({ dom }) => {\r\n      let _dom = dom\r\n      return render(_dom)\r\n    },\r\n    view: ({ attrs: { mdl } }) =>\r\n      m('svg.hamburger', {\r\n        style: { fill: mdl.state.showModal() ? 'white' : 'inherit' },\r\n        onclick: () => mdl.toggleModal(mdl),\r\n      }),\r\n  }\r\n}\r\n\r\nexport default Hamburger\r\n","import m from 'mithril'\r\n\r\nconst ProgressBar = () => {\r\n  return {\r\n    view: ({\r\n      attrs: {\r\n        mdl: {\r\n          state: {\r\n            loadingProgress: { value, max },\r\n          },\r\n        },\r\n      },\r\n    }) => m('.progressBar', m('progress.progress', { max, value })),\r\n  }\r\n}\r\n\r\nexport default ProgressBar\r\n","import m from 'mithril'\r\nimport { debounce } from '../utils/helpers'\r\n\r\nlet debounce300 = debounce(300)\r\n\r\nconst SearchBar = ({ attrs: { mdl } }) => {\r\n  const filterData = mdl.filterData(mdl)\r\n\r\n  return {\r\n    view: () =>\r\n      m('.searchBar', [\r\n        m('input.input', {\r\n          placeholder: 'search query',\r\n          oninput: (e) => debounce300(filterData(e.target.value)),\r\n        }),\r\n      ]),\r\n  }\r\n}\r\n\r\nexport default SearchBar\r\n","import m from 'mithril'\r\nimport Header from './components/Header.js'\r\nimport Footer from './components/Footer.js'\r\nimport Body from './components/Body.js'\r\nimport Modal from './components/Modal.js'\r\nconst Layout = ({ attrs: { mdl } }) => {\r\n  return {\r\n    view: ({ children }) =>\r\n      m(\r\n        'section.layout',\r\n        {\r\n          id: 'layout',\r\n        },\r\n        children\r\n          ? [\r\n            m(Header, { mdl }),\r\n            mdl.state.showModal() &&\r\n                m(\r\n                  Modal,\r\n                  { mdl },\r\n                  m('code.about', 'Search For Clinical Trials')\r\n                ),\r\n            m(Body, { mdl }, [children]),\r\n            m(Footer, { mdl }),\r\n          ]\r\n          : []\r\n      ),\r\n  }\r\n}\r\n\r\nexport default Layout\r\n","import {\r\n  compose,\r\n  join,\r\n  values,\r\n  props,\r\n  assoc,\r\n  test,\r\n  prop,\r\n  filter,\r\n  sortBy,\r\n  toLower,\r\n  identity,\r\n  reverse,\r\n  slice,\r\n  max,\r\n  min,\r\n  map,\r\n} from 'ramda'\r\n\r\nimport Task from 'data.task'\r\n\r\nexport const log = (m) => (v) => {\r\n  console.log(m, v)\r\n  return v\r\n}\r\n\r\nexport const isEmpty = (data) => data.length == 0\r\n\r\nexport const infiniteScroll = (mdl) => (e) => {\r\n  let route = mdl.state.route\r\n  let length = mdl.data[route].data.length\r\n  let setpoint = 10 * length * mdl.state.scrollPos\r\n  if (e.target.scrollTop - mdl.state.scrollPos >= setpoint) {\r\n    mdl.state.scrollPos++ + e.target.scrollTop\r\n  }\r\n}\r\n\r\nexport const addTerms = (item) => {\r\n  const terms = compose(\r\n    join(' '),\r\n    values,\r\n    props(['uuid', 'id', 'name'])\r\n  )(item)\r\n\r\n  return assoc('_terms', terms, item)\r\n}\r\n\r\nconst byTerms = (query) =>\r\n  compose(\r\n    test(new RegExp(query, 'i')),\r\n    prop('name')\r\n  )\r\n\r\nexport const _search = (query) => compose(filter(byTerms(query)))\r\n\r\nexport const _sort = (p) =>\r\n  sortBy(\r\n    compose(\r\n      toLower,\r\n      toString,\r\n      prop(p)\r\n    )\r\n  )\r\n\r\nexport const _direction = (dir) => (dir == 'asc' ? identity : reverse)\r\n\r\nexport const _paginate = (offset) => (limit) => (data) =>\r\n  slice(\r\n    max(0, min(offset, data.length)),\r\n    min(offset + limit, data.length),\r\n    data\r\n  )\r\n\r\nexport const filterTask = (query) => (prop) => (direction) => (offset) => (\r\n  limit\r\n) =>\r\n  compose(\r\n    Task.of,\r\n    map(_paginate(offset)(limit)),\r\n    map(_direction(direction)),\r\n    map(_sort(prop)),\r\n    _search(query)\r\n  )\r\n\r\nexport const debounce = (wait, now) => (fn) => {\r\n  let timeout = undefined\r\n  return function() {\r\n    let context = this\r\n    let args = arguments\r\n    let later = function() {\r\n      timeout = undefined\r\n      if (!now) fn.apply(context, args)\r\n    }\r\n    let callNow = now && !timeout\r\n    clearTimeout(timeout)\r\n    timeout = setTimeout(later, wait)\r\n    console.log(fn)\r\n    if (callNow) fn.apply(context, args)\r\n  }\r\n}\r\n","import m from 'mithril'\r\nimport {\r\n  animateChildrenLimitsEntrance,\r\n  animateChildrenLimitsExit,\r\n} from '../utils/animations.js'\r\n\r\nconst Selector = {\r\n  onbeforeremove: animateChildrenLimitsExit,\r\n  view: ({ attrs: { mdl } }) =>\r\n    m(\r\n      '.limits',\r\n      mdl.limits.map((limit, idx) =>\r\n        m(\r\n          'button.btn.limit',\r\n          {\r\n            oncreate: animateChildrenLimitsEntrance(idx),\r\n            onclick: () => {\r\n              mdl.state.limit = limit\r\n              mdl.state.showLimits(false)\r\n            },\r\n            key: idx,\r\n          },\r\n          limit\r\n        )\r\n      )\r\n    ),\r\n}\r\n\r\nconst DropDown = {\r\n  view: ({ attrs: { mdl } }) =>\r\n    m('.changeLimits', [\r\n      m(\r\n        'button.btn',\r\n        {\r\n          onclick: () => mdl.toggleLimits(mdl),\r\n        },\r\n        'Change Limit'\r\n      ),\r\n      mdl.state.showLimits() && m(Selector, { mdl }),\r\n    ]),\r\n}\r\n\r\nexport default DropDown\r\n","import m from 'mithril'\r\nimport Hamburger from './Hamburger.js'\r\nimport ProgressBar from './ProgressBar.js'\r\nimport DropDown from './DropDown.js'\r\nimport SearchBar from './SearchBar.js'\r\nimport { animate } from '../utils'\r\n\r\nconst Header = {\r\n  oncreate: animate('slideDown'),\r\n  view: ({ attrs: { mdl } }) =>\r\n    m(\r\n      'header.header',\r\n      {\r\n        id: 'header',\r\n      },\r\n      [\r\n        mdl.state.isLoading()\r\n          ? m(ProgressBar, { mdl })\r\n          : [\r\n            m(Hamburger, { mdl }),\r\n            m(SearchBar, { mdl }),\r\n            m(DropDown, { mdl }),\r\n          ],\r\n      ]\r\n    ),\r\n}\r\n\r\nexport default Header\r\n","import m from 'mithril'\r\nimport { animate, animateChildrenLimitsEntrance } from '../utils/index.js'\r\nconst Footer = {\r\n  oncreate: animate('slideUp'),\r\n  view: () =>\r\n    m(\r\n      'footer',\r\n      {\r\n        oncreate: animateChildrenLimitsEntrance,\r\n        id: 'footer',\r\n      },\r\n      'content served from NCI Clinical Trials Search API'\r\n    ),\r\n}\r\n\r\nexport default Footer\r\n","import m from 'mithril'\r\nimport { animate } from '../utils/index.js'\r\n\r\nconst Body = {\r\n  oncreate: animate('slideUp'),\r\n  view: ({ children }) => m('section.content', { id: 'content' }, children),\r\n}\r\n\r\nexport default Body\r\n","import m from 'mithril'\r\nimport { animateSidebarEntrance,slideModalOut } from '../utils/animations.js'\r\n\r\nconst Modal = {\r\n  oncreate: animateSidebarEntrance,\r\n  onbeforeremove:slideModalOut,\r\n  view: ({ children }) => m('.navigationModal', children),\r\n}\r\n\r\nexport default Modal\r\n","import m from 'mithril'\r\nimport { model } from './Model.js'\r\nimport ClinicalTrials from './ClinicalTrials.js'\r\nimport Layout from './Layout.js'\r\nimport { animate } from './utils'\r\nimport 'normalize.css'\r\n\r\nconst root = document.body\r\n\r\nif (module.hot) {\r\n  module.hot.accept()\r\n}\r\n\r\nif (process.env.NODE_ENV !== 'production') {\r\n  console.log('Looks like we are in development mode!')\r\n}\r\n\r\nfunction getProfile(w) {\r\n  if (w < 668) return 'phone'\r\n  if (w < 920) return 'tablet'\r\n  return 'desktop'\r\n}\r\n\r\n// Styles\r\nimport './index.scss'\r\nimport './utils/animations.css'\r\nimport './utils/loader.scss'\r\n\r\nlet winW = window.innerWidth\r\nmodel.state.profile = getProfile(winW)\r\n\r\nfunction checkWidth() {\r\n  const w = window.innerWidth\r\n  if (winW !== w) {\r\n    winW = w\r\n    var lastProfile = model.state.profile\r\n    model.state.profile = getProfile(w)\r\n    if (lastProfile != model.state.profile) m.redraw()\r\n  }\r\n  requestAnimationFrame(checkWidth)\r\n}\r\n\r\ncheckWidth()\r\n\r\nm.mount(root, {\r\n  view: () =>\r\n    m(\r\n      Layout,\r\n      {\r\n        mdl: model,\r\n      },\r\n      m(ClinicalTrials, {\r\n        oncreate: animate,\r\n        mdl: model,\r\n      })\r\n    ),\r\n})\r\n"],"sourceRoot":""}